{"ast":null,"code":"var _jsxFileName = \"/Users/ramsses/Downloads/test/tasks/src/components/TaskFieldDuration.js\";\nimport React, { useState } from 'react';\nimport { Card, Button, Form, Col } from 'react-bootstrap';\nimport { MdModeEdit as EditIcon } from 'react-icons/md';\nimport CreateTaskModal from './CreateTaskModal';\nimport { updateTasks } from '../services/updateTasks';\nimport utils from '../helpers/utils'; // layout para editar la duracion de la tarea\n\nfunction TaskFieldDurationLayout(props) {\n  const canEdit = props.status === 'notstarted';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-duration-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, !props.isEditing && canEdit && /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onEdit,\n    className: \"task-duration-button\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })), props.children);\n}\n\nfunction TaskFieldDuration(props) {\n  const [state, setState] = useState({\n    modalShow: false,\n    customDuration: [1800, 2700, 3600].includes(parseInt(props.task.duration)),\n    duration: props.task.duration\n  });\n  /**\n   * Mostrar modal de edicion\n   */\n\n  const onEdit = () => {\n    setState({ ...state,\n      modalShow: true\n    });\n  };\n  /**\n   *\n   * @param {Object} event objeto del evento con datos del formulario de edicion\n   */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setState({ ...state,\n      modalShow: false\n    });\n    const {\n      value\n    } = event.target.elements.duration;\n    const {\n      durationRemaining\n    } = props.task; // si la nueva duracion es menor al tiempo que le quedaba lo cambio\n\n    if (props.listName === 'tasksNotStarted') {\n      const [thirtyMinutes, sixtyMinutes] = [30 * 60, 60 * 60];\n      let isInvalidForFilter = false; // si la duracion no entra en el rango del filtro la quitaremos\n\n      if (props.filter === 2) {\n        if (value > thirtyMinutes) isInvalidForFilter = true;\n      }\n\n      if (props.filter === 3) {\n        if (value < thirtyMinutes || value > sixtyMinutes) isInvalidForFilter = true;\n      }\n\n      if (props.filter === 4) {\n        if (value < sixtyMinutes) isInvalidForFilter = true;\n      }\n\n      if (isInvalidForFilter) {\n        // llamo directo la mi servicio de actualizacion\n        updateTasks({\n          id: props.task.id,\n          durationRemaining: value <= durationRemaining ? value : durationRemaining,\n          duration: value\n        });\n        props.removeFromTaskNotStarted(props.task.id); // Tasks.js -> removeFromTaskNotStarted\n      } else {\n        // Task.js -> editTask\n        props.editTask({\n          durationRemaining: value <= durationRemaining ? value : durationRemaining,\n          duration: value\n        });\n      }\n    } else {\n      // Task.js -> editTask\n      props.editTask({\n        durationRemaining: value <= durationRemaining ? value : durationRemaining,\n        duration: value\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TaskFieldDurationLayout, {\n    onEdit: onEdit,\n    isEditing: state.modalShow,\n    status: props.task.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, state.modalShow && /*#__PURE__*/React.createElement(CreateTaskModal, {\n    show: state.modalShow,\n    onHide: () => setState({\n      modalShow: false,\n      customDuration: [1800, 2700, 3600].includes(parseInt(props.task.duration)),\n      duration: props.task.duration\n    }),\n    title: props.task.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Duracion\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: \"Personalizado\",\n    onChange: e => {\n      setState({ ...state,\n        customDuration: e.target.checked,\n        duration: !e.target.checked ? 1800 : state.duration\n      });\n    },\n    checked: state.customDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, !state.customDuration && /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    name: \"duration\",\n    value: String(state.duration),\n    onChange: e => setState({ ...state,\n      duration: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 30 * 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"30 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 45 * 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"45 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 60 * 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"1 hr\")), state.customDuration && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, utils().formatToMinutesSeconds(state.duration)), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"range\",\n    custom: true,\n    name: \"duration\",\n    min: 60,\n    max: 7200,\n    value: state.duration,\n    onChange: e => setState({ ...state,\n      duration: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Cambiar Duraci\\xF3n\"))), !state.modalShow && /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Duracion: \", utils().formatToMinutesSeconds(props.task.duration)), ' ', props.listName === 'tasksFinished' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Finalizo en: \", utils().formatToMinutesSeconds(props.task.duration - props.task.durationRemaining)), ' ')));\n}\n\nexport default TaskFieldDuration;","map":{"version":3,"sources":["/Users/ramsses/Downloads/test/tasks/src/components/TaskFieldDuration.js"],"names":["React","useState","Card","Button","Form","Col","MdModeEdit","EditIcon","CreateTaskModal","updateTasks","utils","TaskFieldDurationLayout","props","canEdit","status","isEditing","onEdit","color","children","TaskFieldDuration","state","setState","modalShow","customDuration","includes","parseInt","task","duration","handleSubmit","event","preventDefault","stopPropagation","value","target","elements","durationRemaining","listName","thirtyMinutes","sixtyMinutes","isInvalidForFilter","filter","id","removeFromTaskNotStarted","editTask","name","e","checked","String","formatToMinutesSeconds","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,GAA7B,QAAwC,iBAAxC;AACA,SAASC,UAAU,IAAIC,QAAvB,QAAuC,gBAAvC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,SAASC,uBAAT,CAAkCC,KAAlC,EAAyC;AACvC,QAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,KAAiB,YAAjC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACF,KAAK,CAACG,SAAP,IAAoBF,OAArB,iBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACI,MAAvB;AAA+B,IAAA,SAAS,EAAC,sBAAzC;AAAgE,IAAA,OAAO,EAAC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMGL,KAAK,CAACM,QANT,CADF;AAUD;;AAED,SAASC,iBAAT,CAA4BP,KAA5B,EAAmC;AACjC,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC;AACjCqB,IAAAA,SAAS,EAAE,KADsB;AAEjCC,IAAAA,cAAc,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBC,QAAnB,CAA4BC,QAAQ,CAACb,KAAK,CAACc,IAAN,CAAWC,QAAZ,CAApC,CAFiB;AAGjCA,IAAAA,QAAQ,EAAEf,KAAK,CAACc,IAAN,CAAWC;AAHY,GAAD,CAAlC;AAMA;;;;AAGA,QAAMX,MAAM,GAAG,MAAM;AACnBK,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,MAAAA,SAAS,EAAE;AAAvB,KAAD,CAAR;AACD,GAFD;AAIA;;;;;;AAIA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAV,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,MAAAA,SAAS,EAAE;AAFJ,KAAD,CAAR;AAIA,UAAM;AAAEU,MAAAA;AAAF,QAAYH,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsBP,QAAxC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAwBvB,KAAK,CAACc,IAApC,CAR8B,CAS9B;;AACA,QAAId,KAAK,CAACwB,QAAN,KAAmB,iBAAvB,EAA0C;AACxC,YAAM,CAAEC,aAAF,EAAiBC,YAAjB,IAAkC,CAAE,KAAK,EAAP,EAAW,KAAK,EAAhB,CAAxC;AACA,UAAIC,kBAAkB,GAAG,KAAzB,CAFwC,CAGxC;;AACA,UAAI3B,KAAK,CAAC4B,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAIR,KAAK,GAAGK,aAAZ,EAA2BE,kBAAkB,GAAG,IAArB;AAC5B;;AACD,UAAI3B,KAAK,CAAC4B,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAIR,KAAK,GAAGK,aAAR,IAAyBL,KAAK,GAAGM,YAArC,EAAmDC,kBAAkB,GAAG,IAArB;AACpD;;AACD,UAAI3B,KAAK,CAAC4B,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAIR,KAAK,GAAGM,YAAZ,EAA0BC,kBAAkB,GAAG,IAArB;AAC3B;;AACD,UAAIA,kBAAJ,EAAwB;AACtB;AACA9B,QAAAA,WAAW,CAAC;AACVgC,UAAAA,EAAE,EAAE7B,KAAK,CAACc,IAAN,CAAWe,EADL;AAEVN,UAAAA,iBAAiB,EAAEH,KAAK,IAAIG,iBAAT,GAA6BH,KAA7B,GAAqCG,iBAF9C;AAGVR,UAAAA,QAAQ,EAAEK;AAHA,SAAD,CAAX;AAKApB,QAAAA,KAAK,CAAC8B,wBAAN,CAA+B9B,KAAK,CAACc,IAAN,CAAWe,EAA1C,EAPsB,CAOyB;AAChD,OARD,MAQO;AACL;AACA7B,QAAAA,KAAK,CAAC+B,QAAN,CAAe;AACbR,UAAAA,iBAAiB,EAAEH,KAAK,IAAIG,iBAAT,GAA6BH,KAA7B,GAAqCG,iBAD3C;AAEbR,UAAAA,QAAQ,EAAEK;AAFG,SAAf;AAID;AACF,KA5BD,MA4BO;AACL;AACApB,MAAAA,KAAK,CAAC+B,QAAN,CAAe;AACbR,QAAAA,iBAAiB,EAAEH,KAAK,IAAIG,iBAAT,GAA6BH,KAA7B,GAAqCG,iBAD3C;AAEbR,QAAAA,QAAQ,EAAEK;AAFG,OAAf;AAID;AACF,GA7CD;;AA+CA,sBACE,oBAAC,uBAAD;AAAyB,IAAA,MAAM,EAAEhB,MAAjC;AAAyC,IAAA,SAAS,EAAEI,KAAK,CAACE,SAA1D;AAAqE,IAAA,MAAM,EAAEV,KAAK,CAACc,IAAN,CAAWZ,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACE,SAAN,iBACC,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEF,KAAK,CAACE,SADd;AAEE,IAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC;AACrBC,MAAAA,SAAS,EAAE,KADU;AAErBC,MAAAA,cAAc,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBC,QAAnB,CAA4BC,QAAQ,CAACb,KAAK,CAACc,IAAN,CAAWC,QAAZ,CAApC,CAFK;AAGrBA,MAAAA,QAAQ,EAAEf,KAAK,CAACc,IAAN,CAAWC;AAHA,KAAD,CAFxB;AAOE,IAAA,KAAK,EAAEf,KAAK,CAACc,IAAN,CAAWkB,IAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEvB,GAAhB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,KAAK,EAAC,eAHR;AAIE,IAAA,QAAQ,EAAEwC,CAAC,IAAI;AACbxB,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPG,QAAAA,cAAc,EAAEsB,CAAC,CAACZ,MAAF,CAASa,OAFlB;AAGPnB,QAAAA,QAAQ,EAAE,CAACkB,CAAC,CAACZ,MAAF,CAASa,OAAV,GAAoB,IAApB,GAA2B1B,KAAK,CAACO;AAHpC,OAAD,CAAR;AAKD,KAVH;AAWE,IAAA,OAAO,EAAEP,KAAK,CAACG,cAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAmBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAElB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACe,KAAK,CAACG,cAAP,iBACC,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEwB,MAAM,CAAC3B,KAAK,CAACO,QAAP,CAJf;AAKE,IAAA,QAAQ,EAAEkB,CAAC,IAAIxB,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYO,MAAAA,QAAQ,EAAEkB,CAAC,CAACZ,MAAF,CAASD;AAA/B,KAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,IAAA,KAAK,EAAE,KAAK,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,IAAA,KAAK,EAAE,KAAK,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,IAAA,KAAK,EAAE,KAAK,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAFJ,EAcGZ,KAAK,CAACG,cAAN,iBACC,uDACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAab,KAAK,GAAGsC,sBAAR,CAA+B5B,KAAK,CAACO,QAArC,CAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,GAAG,EAAE,EAJP;AAKE,IAAA,GAAG,EAAE,IALP;AAME,IAAA,KAAK,EAAEP,KAAK,CAACO,QANf;AAOE,IAAA,QAAQ,EAAEkB,CAAC,IAAIxB,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYO,MAAAA,QAAQ,EAAEkB,CAAC,CAACZ,MAAF,CAASD;AAA/B,KAAD,CAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfJ,CAnBF,CADF,eAkDE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlDF,CATF,CAFJ,EAmEG,CAACZ,KAAK,CAACE,SAAP,iBACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyCZ,KAAK,GAAGsC,sBAAR,CAA+BpC,KAAK,CAACc,IAAN,CAAWC,QAA1C,CAAzC,CADF,EACwG,GADxG,EAEGf,KAAK,CAACwB,QAAN,KAAmB,eAAnB,iBACC,uDACE;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4CvC,KAAK,GAAGsC,sBAAR,CAA+BpC,KAAK,CAACc,IAAN,CAAWC,QAAX,GAAsBf,KAAK,CAACc,IAAN,CAAWS,iBAAhE,CAA5C,CAFF,EAE0I,GAF1I,CAHJ,CApEJ,CADF;AAiFD;;AAED,eAAehB,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Form, Col } from 'react-bootstrap';\nimport { MdModeEdit as EditIcon } from 'react-icons/md';\n\nimport CreateTaskModal from './CreateTaskModal';\nimport { updateTasks } from '../services/updateTasks';\n\nimport utils from '../helpers/utils';\n\n// layout para editar la duracion de la tarea\nfunction TaskFieldDurationLayout (props) {\n  const canEdit = props.status === 'notstarted';\n  return (\n    <div className='task-duration-container'>\n      {(!props.isEditing && canEdit) && (\n        <Button onClick={props.onEdit} className='task-duration-button' variant='primary'>\n          <EditIcon style={{ color: 'white' }} />\n        </Button>\n      )}\n      {props.children}\n    </div>\n  );\n}\n\nfunction TaskFieldDuration (props) {\n  const [state, setState] = useState({\n    modalShow: false,\n    customDuration: [1800, 2700, 3600].includes(parseInt(props.task.duration)),\n    duration: props.task.duration\n  });\n\n  /**\n   * Mostrar modal de edicion\n   */\n  const onEdit = () => {\n    setState({ ...state, modalShow: true });\n  };\n\n  /**\n   *\n   * @param {Object} event objeto del evento con datos del formulario de edicion\n   */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setState({\n      ...state,\n      modalShow: false\n    });\n    const { value } = event.target.elements.duration;\n    const { durationRemaining } = props.task;\n    // si la nueva duracion es menor al tiempo que le quedaba lo cambio\n    if (props.listName === 'tasksNotStarted') {\n      const [ thirtyMinutes, sixtyMinutes ] = [ 30 * 60, 60 * 60 ];\n      let isInvalidForFilter = false;\n      // si la duracion no entra en el rango del filtro la quitaremos\n      if (props.filter === 2) {\n        if (value > thirtyMinutes) isInvalidForFilter = true;\n      }\n      if (props.filter === 3) {\n        if (value < thirtyMinutes || value > sixtyMinutes) isInvalidForFilter = true;\n      }\n      if (props.filter === 4) {\n        if (value < sixtyMinutes) isInvalidForFilter = true;\n      }\n      if (isInvalidForFilter) {\n        // llamo directo la mi servicio de actualizacion\n        updateTasks({\n          id: props.task.id,\n          durationRemaining: value <= durationRemaining ? value : durationRemaining,\n          duration: value\n        });\n        props.removeFromTaskNotStarted(props.task.id); // Tasks.js -> removeFromTaskNotStarted\n      } else {\n        // Task.js -> editTask\n        props.editTask({\n          durationRemaining: value <= durationRemaining ? value : durationRemaining,\n          duration: value\n        });\n      }\n    } else {\n      // Task.js -> editTask\n      props.editTask({\n        durationRemaining: value <= durationRemaining ? value : durationRemaining,\n        duration: value\n      });\n    }\n  };\n\n  return (\n    <TaskFieldDurationLayout onEdit={onEdit} isEditing={state.modalShow} status={props.task.status}>\n      {state.modalShow && (\n        <CreateTaskModal\n          show={state.modalShow}\n          onHide={() => setState({\n            modalShow: false,\n            customDuration: [1800, 2700, 3600].includes(parseInt(props.task.duration)),\n            duration: props.task.duration\n          })}\n          title={props.task.name}\n        >\n          <Form onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} xs={6}>\n                <Form.Label>Duracion</Form.Label>\n              </Form.Group>\n              <Form.Group as={Col} xs={6}>\n                <Form.Check\n                  type='switch'\n                  id='custom-switch'\n                  label='Personalizado'\n                  onChange={e => {\n                    setState({\n                      ...state,\n                      customDuration: e.target.checked,\n                      duration: !e.target.checked ? 1800 : state.duration\n                    });\n                  }}\n                  checked={state.customDuration}\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                {!state.customDuration && (\n                  <Form.Control\n                    as='select'\n                    custom\n                    name='duration'\n                    value={String(state.duration)}\n                    onChange={e => setState({ ...state, duration: e.target.value })}\n                  >\n                    <option value={30 * 60}>30 min</option>\n                    <option value={45 * 60}>45 min</option>\n                    <option value={60 * 60}>1 hr</option>\n                  </Form.Control>\n                )}\n                {state.customDuration && (\n                  <>\n                    <Form.Label>{utils().formatToMinutesSeconds(state.duration)}</Form.Label>\n                    <Form.Control\n                      type='range'\n                      custom\n                      name='duration'\n                      min={60}\n                      max={7200}\n                      value={state.duration}\n                      onChange={e => setState({ ...state, duration: e.target.value })}\n                    />\n                  </>\n                )}\n              </Form.Group>\n            </Form.Row>\n            <Button variant='success' type='submit'>\n              Cambiar Duración\n            </Button>\n          </Form>\n        </CreateTaskModal>\n      )}\n      {!state.modalShow && (\n        <Card.Text>\n          <small className='text-muted'>Duracion: {utils().formatToMinutesSeconds(props.task.duration)}</small>{' '}\n          {props.listName === 'tasksFinished' && (\n            <>\n              <span style={{ marginLeft: 15 }} />\n              <small className='text-muted'>Finalizo en: {utils().formatToMinutesSeconds(props.task.duration - props.task.durationRemaining)}</small>{' '}\n            </>\n          )}\n        </Card.Text>\n      )}\n    </TaskFieldDurationLayout>\n  );\n}\n\nexport default TaskFieldDuration;\n"]},"metadata":{},"sourceType":"module"}