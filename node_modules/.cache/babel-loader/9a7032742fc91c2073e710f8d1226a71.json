{"ast":null,"code":"var _jsxFileName = \"/Users/ramsses/programacion/EXAMENES/tasks/src/components/TaskFieldDescription.js\";\nimport React, { useState } from 'react';\nimport { Card, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { MdModeEdit as EditIcon } from 'react-icons/md';\nimport { FaCheck as AcceptIcon } from 'react-icons/fa';\nimport { IoMdClose as CancelIcon } from 'react-icons/io'; // Layout para editar descripcion.\n\nfunction TaskFieldDescriptionLayout(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-description-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, !props.isEditing && /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onEdit,\n    className: \"task-description-button\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  })), props.children);\n}\n\nfunction TaskFieldDescription(props) {\n  const [state, setState] = useState({\n    edition: false\n  });\n  /**\n   * Marco este campo como editando\n   */\n\n  const onEdit = () => {\n    setState({ ...state,\n      edition: true\n    });\n  };\n  /**\n   *\n   * @param {Object} event handle del evento del boton\n   * -> edito la descripcion de la tarea\n   */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    setState({ ...state,\n      edition: false\n    });\n    props.editTask({\n      description: event.target.elements.description.value\n    }); // Task.js editTask\n  };\n  /**\n   * Cancelar la edicion del campo descripcion\n   */\n\n\n  const cancel = () => {\n    setState({ ...state,\n      edition: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TaskFieldDescriptionLayout, {\n    onEdit: onEdit,\n    isEditing: state.edition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, state.edition && /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    defaultValue: props.text,\n    as: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AcceptIcon, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  })))))), !state.edition && /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, props.text));\n}\n\nexport default TaskFieldDescription;","map":{"version":3,"sources":["/Users/ramsses/programacion/EXAMENES/tasks/src/components/TaskFieldDescription.js"],"names":["React","useState","Card","Button","Form","InputGroup","FormControl","MdModeEdit","EditIcon","FaCheck","AcceptIcon","IoMdClose","CancelIcon","TaskFieldDescriptionLayout","props","isEditing","onEdit","color","children","TaskFieldDescription","state","setState","edition","handleSubmit","event","preventDefault","stopPropagation","editTask","description","target","elements","value","cancel","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,UAA7B,EAAyCC,WAAzC,QAA4D,iBAA5D;AACA,SAASC,UAAU,IAAIC,QAAvB,QAAuC,gBAAvC;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,gBAAtC;AACA,SAASC,SAAS,IAAIC,UAAtB,QAAwC,gBAAxC,C,CAEA;;AACA,SAASC,0BAAT,CAAqCC,KAArC,EAA4C;AAC1C,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,KAAK,CAACC,SAAP,iBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACE,MAAvB;AAA+B,IAAA,SAAS,EAAC,yBAAzC;AAAmE,IAAA,OAAO,EAAC,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMGH,KAAK,CAACI,QANT,CADF;AAUD;;AAED,SAASC,oBAAT,CAA+BL,KAA/B,EAAsC;AACpC,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC;AACjCqB,IAAAA,OAAO,EAAE;AADwB,GAAD,CAAlC;AAIA;;;;AAGA,QAAMN,MAAM,GAAG,MAAM;AACnBK,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,MAAAA,OAAO,EAAE;AAArB,KAAD,CAAR;AACD,GAFD;AAIA;;;;;;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAL,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAR,IAAAA,KAAK,CAACa,QAAN,CAAe;AAAEC,MAAAA,WAAW,EAAEJ,KAAK,CAACK,MAAN,CAAaC,QAAb,CAAsBF,WAAtB,CAAkCG;AAAjD,KAAf,EAP8B,CAO4C;AAC3E,GARD;AAUA;;;;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACnBX,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,0BAAD;AAA4B,IAAA,MAAM,EAAEN,MAApC;AAA4C,IAAA,SAAS,EAAEI,KAAK,CAACE,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACE,OAAN,iBACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAET,KAAK,CAACmB,IAFtB;AAGE,IAAA,EAAE,EAAC,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAEe,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CANF,CADF,CADF,CAFJ,EAsBG,CAACG,KAAK,CAACE,OAAP,iBACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYR,KAAK,CAACmB,IAAlB,CAvBJ,CADF;AA4BD;;AAED,eAAed,oBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { MdModeEdit as EditIcon } from 'react-icons/md';\nimport { FaCheck as AcceptIcon } from 'react-icons/fa';\nimport { IoMdClose as CancelIcon } from 'react-icons/io';\n\n// Layout para editar descripcion.\nfunction TaskFieldDescriptionLayout (props) {\n  return (\n    <div className='task-description-container'>\n      {!props.isEditing && (\n        <Button onClick={props.onEdit} className='task-description-button' variant='primary'>\n          <EditIcon style={{ color: 'white' }} />\n        </Button>\n      )}\n      {props.children}\n    </div>\n  );\n}\n\nfunction TaskFieldDescription (props) {\n  const [state, setState] = useState({\n    edition: false\n  });\n\n  /**\n   * Marco este campo como editando\n   */\n  const onEdit = () => {\n    setState({ ...state, edition: true });\n  };\n\n  /**\n   *\n   * @param {Object} event handle del evento del boton\n   * -> edito la descripcion de la tarea\n   */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setState({\n      ...state,\n      edition: false\n    });\n    props.editTask({ description: event.target.elements.description.value }); // Task.js editTask\n  };\n\n  /**\n   * Cancelar la edicion del campo descripcion\n   */\n  const cancel = () => {\n    setState({\n      ...state,\n      edition: false\n    });\n  };\n\n  return (\n    <TaskFieldDescriptionLayout onEdit={onEdit} isEditing={state.edition}>\n      {state.edition && (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId='description'>\n            <InputGroup>\n              <FormControl\n                type='text'\n                defaultValue={props.text}\n                as='textarea'\n              />\n              <InputGroup.Append>\n                <Button variant='success' type='submit'>\n                  <AcceptIcon style={{ color: 'white' }} />\n                </Button>\n                <Button variant='danger' onClick={cancel}>\n                  <CancelIcon style={{ color: 'white' }} />\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Group>\n        </Form>\n      )}\n      {!state.edition && (\n        <Card.Text>{props.text}</Card.Text>\n      )}\n    </TaskFieldDescriptionLayout>\n  );\n}\n\nexport default TaskFieldDescription;\n"]},"metadata":{},"sourceType":"module"}