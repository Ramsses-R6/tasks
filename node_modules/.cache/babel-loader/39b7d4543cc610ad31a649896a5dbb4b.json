{"ast":null,"code":"var _jsxFileName = \"/Users/ramsses/programacion/EXAMENES/tasks/src/pages/Tasks.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Container, Row, Col, ToggleButtonGroup, ToggleButton, Spinner, Jumbotron, Badge } from 'react-bootstrap';\nimport { IoMdArrowRoundBack as BackIcon } from 'react-icons/io';\nimport { getTasksQuery } from '../services/getTasksQuery';\nimport { getTasksFiltered } from '../services/getTasksFiltered';\nimport utils from '../helpers/utils';\nimport '../components/css/Tasks.css';\nimport TaskList from '../components/TaskList';\nimport CreateTask from '../components/CreateTask';\nimport RandomTasks from '../components/RandomTasks';\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasksNotStarted: [],\n      tasksStarted: [],\n      tasksFinished: [],\n      filter: 1,\n      loading: true\n    };\n    this.mountedComponent = false;\n  }\n\n  async componentDidMount() {\n    // para no cambiar el estado si se desmonta el componente antes de terminar las peticiones\n    this.mountedComponent = true; // request de las tareas\n\n    const tasksNotStartedResults = await this.getTasksQueryAPI({\n      status: 'notstarted'\n    });\n\n    if (!tasksNotStartedResults.error && this.mountedComponent) {\n      this.setState({ ...this.state,\n        tasksNotStarted: tasksNotStartedResults.data\n      });\n    }\n\n    const tasksStartedResults = await this.getTasksQueryAPI({\n      status: ['started', 'paused']\n    });\n\n    if (!tasksStartedResults.error && this.mountedComponent) {\n      this.setState({ ...this.state,\n        tasksStarted: tasksStartedResults.data\n      });\n    }\n\n    const tasksFinishedResults = await this.getTasksQueryAPI({\n      status: 'finished'\n    });\n\n    if (!tasksFinishedResults.error && this.mountedComponent) {\n      this.setState({ ...this.state,\n        tasksFinished: tasksFinishedResults.data,\n        loading: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mountedComponent = false;\n  }\n  /**\n   *\n   * @param {Object} query { campo: valor }\n   * Llamo a mi servicio enviando una query diferente\n   */\n\n\n  getTasksQueryAPI(query) {\n    return getTasksQuery({\n      where: query\n    });\n  }\n  /**\n   *\n   * @param {Object} task objeto con datos de la tarea\n   * -> este metodo se llama cuando se crea una tarea y se agrega al estado\n   */\n\n\n  addTask(task) {\n    const validFilters = utils().getFilterId(task.duration); // verifico que el filtro activo haga match con los filtros validos para esta tarea para poder cambiar el estado con la nueva tarea creada\n\n    if (validFilters.includes(this.state.filter)) {\n      this.setState(prevState => ({ ...this.state,\n        tasksNotStarted: [task].concat(prevState.tasksNotStarted)\n      }));\n    }\n  }\n  /**\n   *\n   * @param {Array} tasks Objects\n   * -> Arreglo con todas las tareas generadas por el script de crear 50 tareas aleatorias\n   */\n\n\n  addTasks(tasks) {\n    this.setState({ ...this.state,\n      tasksFinished: tasks\n    });\n  }\n  /**\n   *\n   * @param {integer} id de la tarea\n   * @param {String} listName nombre del estado donde se encuentra la tarea\n   *\n   */\n\n\n  removeTask(id, listName) {\n    const tasks = this.state[listName];\n    const taskIndex = tasks.findIndex(task => task.id === id);\n    tasks.splice(taskIndex, 1);\n    this.setState({ ...this.state,\n      [listName]: tasks\n    });\n  }\n  /**\n   *\n   * @param {Object} task objeto de la tarea\n   * @param {String} listName Nombre del estado donde se encuentra la tarea\n   * @param {String} to nombre del estado a donde envio la tarea\n   */\n\n\n  moveTask(task, listName, to = 'tasksStarted') {\n    const tasks = this.state[listName];\n    const taskIndex = tasks.findIndex(t => t.id === task.id);\n    tasks.splice(taskIndex, 1);\n    this.setState(prevState => ({ ...this.state,\n      [listName]: tasks,\n      [to]: [task].concat(prevState[to])\n    }));\n  }\n  /**\n   *\n   * @param {Integer} e numero del filtro\n   * -> valido el tipo de filtro y traigo sus tareas\n   */\n\n\n  async filterTasks(e) {\n    const [thirtyMinutes, sixtyMinutes] = [30 * 60, 60 * 60];\n    const opts = {\n      field: 'duration',\n      query: {\n        status: 'notstarted'\n      }\n    };\n    if (e === 1) opts.range = [0, 7200];\n    if (e === 2) opts.range = [0, thirtyMinutes];\n    if (e === 3) opts.range = [thirtyMinutes, sixtyMinutes];\n    if (e === 4) opts.range = [sixtyMinutes + 1, 7200];\n    const tasksFilteredResults = await getTasksFiltered(opts);\n\n    if (!tasksFilteredResults.error) {\n      this.setState({ ...this.state,\n        tasksNotStarted: tasksFilteredResults.data,\n        filter: e\n      });\n    }\n  }\n  /**\n   *\n   * @param {Integer} id id de la tarea\n   * -> Remover una tarea del arreglo de tareas pendientes\n   */\n\n\n  removeFromTaskNotStarted(id) {\n    const tasks = this.state.tasksNotStarted;\n    const taskIndex = tasks.findIndex(t => t.id === id);\n    tasks.splice(taskIndex, 1);\n    this.setState({ ...this.state,\n      tasksNotStarted: tasks\n    });\n  }\n  /**\n   *\n   * @param {Array} tasks Arreglo de tareas\n   * @param {String} listName Nombre del estados de las tareas que ordeno\n   * -> Cambia el arreglo de tareas por las nuevas ordenadas\n   */\n\n\n  orderTasks(tasks, listName) {\n    this.setState({ ...this.state,\n      [listName]: tasks\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(Jumbotron, {\n        fluid: true,\n        style: {\n          height: '100vh',\n          padding: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          backgroundColor: '#333'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: {\n          pathname: '/'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(BackIcon, {\n        style: {\n          color: 'white',\n          fontSize: '30px',\n          margin: '7px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '90%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        style: {\n          height: '10rem',\n          width: '10rem'\n        },\n        animation: \"grow\",\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        backgroundColor: '#333'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: '/'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(BackIcon, {\n      style: {\n        color: 'white',\n        fontSize: '30px',\n        margin: '7px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        background: '#252525',\n        marginBottom: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      className: \"verticalPadding center-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CreateTask, {\n      onCreatedTask: this.addTask.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      className: \"verticalPadding center-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RandomTasks, {\n      onCreatedTasks: this.addTasks.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      className: \"verticalPaddingSmall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \"En progreso \", '  ', /*#__PURE__*/React.createElement(Badge, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 61\n      }\n    }, this.state.tasksStarted.length))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      listName: \"tasksStarted\",\n      tasks: this.state.tasksStarted,\n      onDeletedTask: this.removeTask.bind(this),\n      onStartedTask: this.moveTask.bind(this),\n      onFinishedTask: this.moveTask.bind(this),\n      onReorderedTasks: this.orderTasks.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 5,\n      className: \"verticalPaddingSmall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, \"Pendientes \", '  ', /*#__PURE__*/React.createElement(Badge, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 60\n      }\n    }, this.state.tasksNotStarted.length)))), /*#__PURE__*/React.createElement(Col, {\n      sm: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      sm: 7,\n      onChange: this.filterTasks.bind(this),\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"outline-secondary\",\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, \"Todas\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"outline-secondary\",\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \"Cortas\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"outline-secondary\",\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, \"Medias\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"outline-secondary\",\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"Largas\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      listName: \"tasksNotStarted\",\n      tasks: this.state.tasksNotStarted,\n      onDeletedTask: this.removeTask.bind(this),\n      onStartedTask: this.moveTask.bind(this),\n      filter: this.state.filter,\n      onFilteredTasks: this.filterTasks.bind(this),\n      removeFromTaskNotStarted: this.removeFromTaskNotStarted.bind(this),\n      onReorderedTasks: this.orderTasks.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"verticalPaddingSmall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, \"Completadas \", '  ', /*#__PURE__*/React.createElement(Badge, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 61\n      }\n    }, this.state.tasksFinished.length))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      listName: \"tasksFinished\",\n      tasks: this.state.tasksFinished,\n      onDeletedTask: this.removeTask.bind(this),\n      onStartedTask: this.moveTask.bind(this),\n      onReorderedTasks: this.orderTasks.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/ramsses/programacion/EXAMENES/tasks/src/pages/Tasks.js"],"names":["React","Component","NavLink","Container","Row","Col","ToggleButtonGroup","ToggleButton","Spinner","Jumbotron","Badge","IoMdArrowRoundBack","BackIcon","getTasksQuery","getTasksFiltered","utils","TaskList","CreateTask","RandomTasks","Tasks","constructor","props","state","tasksNotStarted","tasksStarted","tasksFinished","filter","loading","mountedComponent","componentDidMount","tasksNotStartedResults","getTasksQueryAPI","status","error","setState","data","tasksStartedResults","tasksFinishedResults","componentWillUnmount","query","where","addTask","task","validFilters","getFilterId","duration","includes","prevState","concat","addTasks","tasks","removeTask","id","listName","taskIndex","findIndex","splice","moveTask","to","t","filterTasks","e","thirtyMinutes","sixtyMinutes","opts","field","range","tasksFilteredResults","removeFromTaskNotStarted","orderTasks","render","height","padding","margin","backgroundColor","pathname","color","fontSize","display","justifyContent","alignItems","width","background","marginBottom","bind","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Container, Row, Col, ToggleButtonGroup, ToggleButton, Spinner, Jumbotron, Badge } from 'react-bootstrap';\nimport { IoMdArrowRoundBack as BackIcon } from 'react-icons/io';\nimport { getTasksQuery } from '../services/getTasksQuery';\nimport { getTasksFiltered } from '../services/getTasksFiltered';\nimport utils from '../helpers/utils';\n\nimport '../components/css/Tasks.css';\n\nimport TaskList from '../components/TaskList';\nimport CreateTask from '../components/CreateTask';\nimport RandomTasks from '../components/RandomTasks';\n\nclass Tasks extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      tasksNotStarted: [],\n      tasksStarted: [],\n      tasksFinished: [],\n      filter: 1,\n      loading: true\n    };\n    this.mountedComponent = false;\n  }\n\n  async componentDidMount () {\n    // para no cambiar el estado si se desmonta el componente antes de terminar las peticiones\n    this.mountedComponent = true;\n\n    // request de las tareas\n    const tasksNotStartedResults = await this.getTasksQueryAPI({ status: 'notstarted' });\n    if (!tasksNotStartedResults.error && this.mountedComponent) {\n      this.setState({\n        ...this.state,\n        tasksNotStarted: tasksNotStartedResults.data\n      });\n    }\n    const tasksStartedResults = await this.getTasksQueryAPI({ status: ['started', 'paused'] });\n    if (!tasksStartedResults.error && this.mountedComponent) {\n      this.setState({\n        ...this.state,\n        tasksStarted: tasksStartedResults.data\n      });\n    }\n    const tasksFinishedResults = await this.getTasksQueryAPI({ status: 'finished' });\n    if (!tasksFinishedResults.error && this.mountedComponent) {\n      this.setState({\n        ...this.state,\n        tasksFinished: tasksFinishedResults.data,\n        loading: false\n      });\n    }\n  }\n\n  componentWillUnmount () {\n    this.mountedComponent = false;\n  }\n\n  /**\n   *\n   * @param {Object} query { campo: valor }\n   * Llamo a mi servicio enviando una query diferente\n   */\n  getTasksQueryAPI (query) {\n    return getTasksQuery({\n      where: query\n    });\n  }\n\n  /**\n   *\n   * @param {Object} task objeto con datos de la tarea\n   * -> este metodo se llama cuando se crea una tarea y se agrega al estado\n   */\n  addTask (task) {\n    const validFilters = utils().getFilterId(task.duration);\n    // verifico que el filtro activo haga match con los filtros validos para esta tarea para poder cambiar el estado con la nueva tarea creada\n    if (validFilters.includes(this.state.filter)) {\n      this.setState(prevState => ({\n        ...this.state,\n        tasksNotStarted: [task].concat(prevState.tasksNotStarted)\n      }));\n    }\n  }\n\n  /**\n   *\n   * @param {Array} tasks Objects\n   * -> Arreglo con todas las tareas generadas por el script de crear 50 tareas aleatorias\n   */\n  addTasks (tasks) {\n    this.setState({\n      ...this.state,\n      tasksFinished: tasks\n    });\n  }\n\n  /**\n   *\n   * @param {integer} id de la tarea\n   * @param {String} listName nombre del estado donde se encuentra la tarea\n   *\n   */\n  removeTask (id, listName) {\n    const tasks = this.state[listName];\n    const taskIndex = tasks.findIndex(task => task.id === id);\n    tasks.splice(taskIndex, 1);\n    this.setState({\n      ...this.state,\n      [listName]: tasks\n    });\n  }\n\n  /**\n   *\n   * @param {Object} task objeto de la tarea\n   * @param {String} listName Nombre del estado donde se encuentra la tarea\n   * @param {String} to nombre del estado a donde envio la tarea\n   */\n  moveTask (task, listName, to = 'tasksStarted') {\n    const tasks = this.state[listName];\n    const taskIndex = tasks.findIndex(t => t.id === task.id);\n    tasks.splice(taskIndex, 1);\n    this.setState(prevState => ({\n      ...this.state,\n      [listName]: tasks,\n      [to]: [task].concat(prevState[to])\n    }));\n  }\n\n  /**\n   *\n   * @param {Integer} e numero del filtro\n   * -> valido el tipo de filtro y traigo sus tareas\n   */\n  async filterTasks (e) {\n    const [ thirtyMinutes, sixtyMinutes ] = [ 30 * 60, 60 * 60 ];\n    const opts = { field: 'duration', query: { status: 'notstarted' } };\n\n    if (e === 1) opts.range = [ 0, 7200 ];\n    if (e === 2) opts.range = [ 0, thirtyMinutes ];\n    if (e === 3) opts.range = [ thirtyMinutes, sixtyMinutes ];\n    if (e === 4) opts.range = [ sixtyMinutes + 1, 7200 ];\n\n    const tasksFilteredResults = await getTasksFiltered(opts);\n    if (!tasksFilteredResults.error) {\n      this.setState({\n        ...this.state,\n        tasksNotStarted: tasksFilteredResults.data,\n        filter: e\n      });\n    }\n  }\n\n  /**\n   *\n   * @param {Integer} id id de la tarea\n   * -> Remover una tarea del arreglo de tareas pendientes\n   */\n  removeFromTaskNotStarted (id) {\n    const tasks = this.state.tasksNotStarted;\n    const taskIndex = tasks.findIndex(t => t.id === id);\n    tasks.splice(taskIndex, 1);\n    this.setState({\n      ...this.state,\n      tasksNotStarted: tasks\n    });\n  }\n\n  /**\n   *\n   * @param {Array} tasks Arreglo de tareas\n   * @param {String} listName Nombre del estados de las tareas que ordeno\n   * -> Cambia el arreglo de tareas por las nuevas ordenadas\n   */\n  orderTasks (tasks, listName) {\n    this.setState({\n      ...this.state,\n      [listName]: tasks\n    });\n  }\n\n  render () {\n    if (this.state.loading) {\n      return (\n        <Jumbotron fluid style={{ height: '100vh', padding: 0, margin: 0 }}>\n          <Container fluid style={{ height: '100%' }}>\n            <Row>\n              <Col style={{ backgroundColor: '#333' }}>\n                <NavLink to={{ pathname: '/' }}>\n                  <BackIcon style={{ color: 'white', fontSize: '30px', margin: '7px' }} />\n                </NavLink>\n              </Col>\n            </Row>\n            <Row style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '90%' }}>\n              <Spinner style={{ height: '10rem', width: '10rem' }} animation='grow' variant='info' />\n            </Row>\n          </Container>\n        </Jumbotron>\n      );\n    }\n\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col style={{ backgroundColor: '#333' }}>\n              <NavLink to={{ pathname: '/' }}>\n                <BackIcon style={{ color: 'white', fontSize: '30px', margin: '7px' }} />\n              </NavLink>\n            </Col>\n          </Row>\n          <Row style={{ background: '#252525', marginBottom: '25px' }}>\n            <Col sm={4} className='verticalPadding center-text'>\n              <CreateTask onCreatedTask={this.addTask.bind(this)} />\n            </Col>\n            <Col sm={8} className='verticalPadding center-text'>\n              <RandomTasks onCreatedTasks={this.addTasks.bind(this)} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Row>\n                <Col xs='12' className='verticalPaddingSmall'>\n                  <h3>\n                    <Badge variant='info'>En progreso {'  '}<Badge variant='light'>{this.state.tasksStarted.length}</Badge></Badge>\n                  </h3>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <TaskList\n                    listName='tasksStarted'\n                    tasks={this.state.tasksStarted}\n                    onDeletedTask={this.removeTask.bind(this)}\n                    onStartedTask={this.moveTask.bind(this)}\n                    onFinishedTask={this.moveTask.bind(this)}\n                    onReorderedTasks={this.orderTasks.bind(this)}\n                  />\n                </Col>\n              </Row>\n\n              <Row>\n                <br />\n              </Row>\n\n              <Row>\n                <Col sm={5} className='verticalPaddingSmall'>\n                  <h3>\n                    <Badge variant='info'>Pendientes {'  '}<Badge variant='light'>{this.state.tasksNotStarted.length}</Badge></Badge>\n                  </h3>\n                </Col>\n                <Col sm={7}>\n                  <ToggleButtonGroup sm={7} onChange={this.filterTasks.bind(this)} type='radio' name='options' defaultValue={1}>\n                    <ToggleButton variant='outline-secondary' value={1}>Todas</ToggleButton>\n                    <ToggleButton variant='outline-secondary' value={2}>Cortas</ToggleButton>\n                    <ToggleButton variant='outline-secondary' value={3}>Medias</ToggleButton>\n                    <ToggleButton variant='outline-secondary' value={4}>Largas</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <TaskList\n                    listName='tasksNotStarted'\n                    tasks={this.state.tasksNotStarted}\n                    onDeletedTask={this.removeTask.bind(this)}\n                    onStartedTask={this.moveTask.bind(this)}\n                    filter={this.state.filter}\n                    onFilteredTasks={this.filterTasks.bind(this)}\n                    removeFromTaskNotStarted={this.removeFromTaskNotStarted.bind(this)}\n                    onReorderedTasks={this.orderTasks.bind(this)}\n                  />\n                </Col>\n              </Row>\n\n              <Row>\n                <br />\n              </Row>\n\n              <Row>\n                <Col className='verticalPaddingSmall'>\n                  <h3>\n                    <Badge variant='info'>Completadas {'  '}<Badge variant='light'>{this.state.tasksFinished.length}</Badge></Badge>\n                  </h3>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <TaskList\n                    listName='tasksFinished'\n                    tasks={this.state.tasksFinished}\n                    onDeletedTask={this.removeTask.bind(this)}\n                    onStartedTask={this.moveTask.bind(this)}\n                    onReorderedTasks={this.orderTasks.bind(this)}\n                  />\n                </Col>\n              </Row>\n\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}