{"ast":null,"code":"var _jsxFileName = \"/Users/ramsses/Downloads/test/tasks/src/components/CreateTask.js\";\nimport React from 'react';\nimport { string as yupString, object as yupObject } from 'yup';\nimport { Formik } from 'formik';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { IoMdAddCircle as AddIcon } from 'react-icons/io';\nimport utils from '../helpers/utils';\nimport { createTasks } from '../services/createTasks';\nimport CreateTaskModal from './CreateTaskModal';\n\nclass CreateTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      customDuration: false\n    };\n    this.schema = yupObject({\n      name: yupString().required(),\n      description: yupString().required(),\n      duration: yupString().required()\n    });\n  }\n  /**\n   *\n   * @param {Object} objValues la tarea que se creara\n   */\n\n\n  async createTask(objValues) {\n    const results = await createTasks({\n      name: objValues.name,\n      description: objValues.description,\n      duration: objValues.duration,\n      durationRemaining: objValues.duration,\n      status: 'notstarted'\n    });\n\n    if (!results.error) {\n      this.setState({\n        modalShow: false,\n        customDuration: false\n      });\n      this.props.onCreatedTask(results.data); // Tasks.js -> addTask\n    }\n  }\n  /**\n   *\n   * @param {Integer} minutes minutos\n   * -> multiplico los minutos por la cantidas de 60 segundos\n   */\n\n\n  calcMinutesToRange(minutes) {\n    return minutes * 60;\n  }\n  /**\n   *\n   * @param {integer} seconds segundos\n   * representa segundos\n   * desde 60 (1 minuto) hasta 7200 (2 horas)\n   */\n\n\n  formatToMinutesSeconds(seconds) {\n    return utils().formatToMinutesSeconds(seconds);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({ ...this.state,\n        modalShow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Crear Tarea \", /*#__PURE__*/React.createElement(AddIcon, {\n      style: {\n        color: 'white',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(CreateTaskModal, {\n      show: this.state.modalShow,\n      onHide: () => this.setState({\n        modalShow: false,\n        customDuration: false\n      }),\n      title: \"Crear Tarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: this.schema,\n      onSubmit: this.createTask.bind(this),\n      initialValues: {\n        name: '',\n        description: '',\n        duration: '1800'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Nombre\",\n      name: \"name\",\n      onChange: props.handleChange,\n      isInvalid: !!props.errors.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, props.errors.name))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      as: \"textarea\",\n      placeholder: \"Descripcion\",\n      name: \"description\",\n      onChange: props.handleChange,\n      isInvalid: !!props.errors.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, props.errors.description))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Duracion\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"switch\",\n      id: \"custom-switch\",\n      label: \"Personalizado\",\n      onChange: e => {\n        if (!e.target.checked) props.setFieldValue('duration', '1800');\n        this.setState({ ...this.state,\n          customDuration: e.target.checked\n        });\n      },\n      checked: this.state.customDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"validationFormik03\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, !this.state.customDuration && /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      custom: true,\n      name: \"duration\",\n      selected: props.values.duration,\n      onChange: props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.calcMinutesToRange(30),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"30 min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: this.calcMinutesToRange(45),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"45 min\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: this.calcMinutesToRange(60),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"1 hr\")), this.state.customDuration && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, this.formatToMinutesSeconds(props.values.duration)), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"range\",\n      custom: true,\n      name: \"duration\",\n      min: 60,\n      max: 7200,\n      value: props.values.duration,\n      onChange: props.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Crear\")))));\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/Users/ramsses/Downloads/test/tasks/src/components/CreateTask.js"],"names":["React","string","yupString","object","yupObject","Formik","Button","Form","Col","IoMdAddCircle","AddIcon","utils","createTasks","CreateTaskModal","CreateTask","Component","constructor","props","state","modalShow","customDuration","schema","name","required","description","duration","createTask","objValues","results","durationRemaining","status","error","setState","onCreatedTask","data","calcMinutesToRange","minutes","formatToMinutesSeconds","seconds","render","color","fontSize","bind","handleSubmit","handleChange","errors","e","target","checked","setFieldValue","values"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { string as yupString, object as yupObject } from 'yup';\nimport { Formik } from 'formik';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { IoMdAddCircle as AddIcon } from 'react-icons/io';\n\nimport utils from '../helpers/utils';\nimport { createTasks } from '../services/createTasks';\n\nimport CreateTaskModal from './CreateTaskModal';\n\nclass CreateTask extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      customDuration: false\n    };\n    this.schema = yupObject({\n      name: yupString().required(),\n      description: yupString().required(),\n      duration: yupString().required()\n    });\n  }\n\n  /**\n   *\n   * @param {Object} objValues la tarea que se creara\n   */\n  async createTask (objValues) {\n    const results = await createTasks({\n      name: objValues.name,\n      description: objValues.description,\n      duration: objValues.duration,\n      durationRemaining: objValues.duration,\n      status: 'notstarted'\n    });\n    if (!results.error) {\n      this.setState({ modalShow: false, customDuration: false });\n      this.props.onCreatedTask(results.data); // Tasks.js -> addTask\n    }\n  }\n\n  /**\n   *\n   * @param {Integer} minutes minutos\n   * -> multiplico los minutos por la cantidas de 60 segundos\n   */\n  calcMinutesToRange (minutes) {\n    return minutes * 60;\n  }\n\n  /**\n   *\n   * @param {integer} seconds segundos\n   * representa segundos\n   * desde 60 (1 minuto) hasta 7200 (2 horas)\n   */\n  formatToMinutesSeconds (seconds) {\n    return utils().formatToMinutesSeconds(seconds);\n  }\n\n  render () {\n    return (\n      <>\n        <Button variant='primary' onClick={() => this.setState({ ...this.state, modalShow: true })}>\n          Crear Tarea <AddIcon style={{ color: 'white', fontSize: '25px' }} />\n        </Button>\n\n        <CreateTaskModal\n          show={this.state.modalShow}\n          onHide={() => this.setState({ modalShow: false, customDuration: false })}\n          title='Crear Tarea'\n        >\n          <Formik\n            validationSchema={this.schema}\n            onSubmit={this.createTask.bind(this)}\n            initialValues={{\n              name: '',\n              description: '',\n              duration: '1800'\n            }}\n          >\n            {(props) => (\n              <Form noValidate onSubmit={props.handleSubmit}>\n                <Form.Row>\n                  <Form.Group as={Col} controlId='validationFormik01'>\n                    <Form.Control\n                      type='text'\n                      placeholder='Nombre'\n                      name='name'\n                      onChange={props.handleChange}\n                      isInvalid={!!props.errors.name}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      {props.errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group as={Col} controlId='validationFormik02'>\n                    <Form.Control\n                      type='text'\n                      as='textarea'\n                      placeholder='Descripcion'\n                      name='description'\n                      onChange={props.handleChange}\n                      isInvalid={!!props.errors.description}\n                    />\n                    <Form.Control.Feedback type='invalid'>\n                      {props.errors.description}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group as={Col} xs={6}>\n                    <Form.Label>Duracion</Form.Label>\n                  </Form.Group>\n                  <Form.Group as={Col} xs={6}>\n                    <Form.Check\n                      type='switch'\n                      id='custom-switch'\n                      label='Personalizado'\n                      onChange={e => {\n                        if (!e.target.checked) props.setFieldValue('duration', '1800');\n                        this.setState({ ...this.state, customDuration: e.target.checked });\n                      }}\n                      checked={this.state.customDuration}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId='validationFormik03'>\n\n                    {!this.state.customDuration && (\n                      <Form.Control\n                        as='select'\n                        custom\n                        name='duration'\n                        selected={props.values.duration}\n                        onChange={props.handleChange}\n                      >\n                        <option value={this.calcMinutesToRange(30)}>30 min</option>\n                        <option value={this.calcMinutesToRange(45)}>45 min</option>\n                        <option value={this.calcMinutesToRange(60)}>1 hr</option>\n                      </Form.Control>\n                    )}\n                    {this.state.customDuration && (\n                      <>\n                        <Form.Label>{this.formatToMinutesSeconds(props.values.duration)}</Form.Label>\n                        <Form.Control\n                          type='range'\n                          custom\n                          name='duration'\n                          min={60}\n                          max={7200}\n                          value={props.values.duration}\n                          onChange={props.handleChange}\n                        />\n                      </>\n                    )}\n                  </Form.Group>\n                </Form.Row>\n                <Button variant='success' type='submit'>Crear</Button>\n              </Form>\n            )}\n          </Formik>\n        </CreateTaskModal>\n      </>\n    );\n  }\n}\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}