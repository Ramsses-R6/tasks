{"ast":null,"code":"var _jsxFileName = \"/Users/ramsses/programacion/EXAMENES/tasks/src/components/Task.js\";\nimport React from 'react';\nimport { Card, Button, Col, Row } from 'react-bootstrap';\nimport { MdDelete as DeleteIcon } from 'react-icons/md';\nimport { updateTasks } from '../services/updateTasks';\nimport { deleteTask } from '../services/deleteTask';\nimport TaskFieldDescription from './TaskFieldDescription';\nimport TaskFieldTimer from './TaskFieldTimer';\nimport TaskFieldDuration from './TaskFieldDuration';\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: this.props.task || null\n    };\n  }\n  /**\n   *\n   * @param {Object} objUpdate tarea a actualizar\n   */\n\n\n  async editTask(objUpdate) {\n    const updated = await updateTasks({\n      id: this.state.task.id,\n      ...objUpdate\n    });\n\n    if (!updated.error) {\n      this.setState({ ...this.state,\n        task: { ...this.state.task,\n          ...objUpdate\n        }\n      });\n    }\n  }\n  /**\n   * Borrar tarea\n   */\n\n\n  async deleteTask() {\n    const deleted = await deleteTask([this.state.task.id]);\n\n    if (!deleted.error) {\n      this.props.onDeletedTask(this.state.task.id, this.props.listName); // Tasks.js -> removeTask\n    }\n  }\n  /**\n   * Actualizar tarea a inicada\n   */\n\n\n  async startTask() {\n    const updated = await updateTasks({\n      id: this.state.task.id,\n      status: 'started'\n    });\n\n    if (!updated.error) {\n      const newTask = this.state.task;\n      newTask.status = 'started';\n      this.props.onStartedTask(newTask, this.props.listName); // Tasks.js -> moveTask\n    }\n  }\n\n  render() {\n    const {\n      task\n    } = this.state;\n    const borderVariant = task.status === 'started' ? 'success' : task.status === 'paused' ? 'danger' : task.status === 'notstarted' ? 'warning' : 'secondary';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: borderVariant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        padding: '5px'\n      },\n      className: \"task-card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        padding: 0,\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, task.name), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deleteTask.bind(this),\n      className: \"task-delete-button\",\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        padding: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TaskFieldDescription, {\n      text: task.description,\n      editTask: this.editTask.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TaskFieldDuration, {\n      task: task,\n      editTask: this.editTask.bind(this),\n      listName: this.props.listName,\n      filter: this.props.filter,\n      removeFromTaskNotStarted: this.props.removeFromTaskNotStarted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      className: \"right-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, task.status !== 'notstarted' && task.status !== 'finished' && /*#__PURE__*/React.createElement(TaskFieldTimer, {\n      task: task,\n      editTask: this.editTask.bind(this),\n      onFinishedTask: this.props.onFinishedTask,\n      listName: this.props.listName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), task.status === 'notstarted' && /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: () => this.startTask('status', 'started'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"Iniciar Tarea\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["/Users/ramsses/programacion/EXAMENES/tasks/src/components/Task.js"],"names":["React","Card","Button","Col","Row","MdDelete","DeleteIcon","updateTasks","deleteTask","TaskFieldDescription","TaskFieldTimer","TaskFieldDuration","Task","Component","constructor","props","state","task","editTask","objUpdate","updated","id","error","setState","deleted","onDeletedTask","listName","startTask","status","newTask","onStartedTask","render","borderVariant","padding","margin","name","bind","color","description","filter","removeFromTaskNotStarted","onFinishedTask"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Col, Row } from 'react-bootstrap';\nimport { MdDelete as DeleteIcon } from 'react-icons/md';\n\nimport { updateTasks } from '../services/updateTasks';\nimport { deleteTask } from '../services/deleteTask';\n\nimport TaskFieldDescription from './TaskFieldDescription';\nimport TaskFieldTimer from './TaskFieldTimer';\nimport TaskFieldDuration from './TaskFieldDuration';\n\nclass Task extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      task: this.props.task || null\n    };\n  }\n\n  /**\n   *\n   * @param {Object} objUpdate tarea a actualizar\n   */\n  async editTask (objUpdate) {\n    const updated = await updateTasks({ id: this.state.task.id, ...objUpdate });\n    if (!updated.error) {\n      this.setState({\n        ...this.state,\n        task: {\n          ...this.state.task,\n          ...objUpdate\n        }\n      });\n    }\n  }\n\n  /**\n   * Borrar tarea\n   */\n  async deleteTask () {\n    const deleted = await deleteTask([this.state.task.id]);\n    if (!deleted.error) {\n      this.props.onDeletedTask(this.state.task.id, this.props.listName); // Tasks.js -> removeTask\n    }\n  }\n\n  /**\n   * Actualizar tarea a inicada\n   */\n  async startTask () {\n    const updated = await updateTasks({ id: this.state.task.id, status: 'started' });\n    if (!updated.error) {\n      const newTask = this.state.task;\n      newTask.status = 'started';\n      this.props.onStartedTask(newTask, this.props.listName); // Tasks.js -> moveTask\n    }\n  }\n\n  render () {\n    const { task } = this.state;\n    const borderVariant = task.status === 'started' ? 'success'\n      : task.status === 'paused' ? 'danger'\n        : task.status === 'notstarted' ? 'warning'\n          : 'secondary';\n    return (\n      <div>\n        <Card border={borderVariant}>\n          <Card.Header style={{ padding: '5px' }} className='task-card-header'>\n            <Card.Title style={{ padding: 0, margin: 0 }}>{task.name}</Card.Title>\n            <Button onClick={this.deleteTask.bind(this)} className='task-delete-button' variant='danger'>\n              <DeleteIcon style={{ color: 'white' }} />\n            </Button>\n          </Card.Header>\n          <Card.Body style={{ padding: '5px' }}>\n            <TaskFieldDescription text={task.description} editTask={this.editTask.bind(this)} />\n            <Row>\n              <Col sm={6}>\n                <TaskFieldDuration\n                  task={task}\n                  editTask={this.editTask.bind(this)}\n                  listName={this.props.listName}\n                  filter={this.props.filter}\n                  removeFromTaskNotStarted={this.props.removeFromTaskNotStarted}\n                />\n              </Col>\n              <Col sm={6} className='right-text'>\n                {(task.status !== 'notstarted' && task.status !== 'finished') && (\n                  <TaskFieldTimer\n                    task={task}\n                    editTask={this.editTask.bind(this)}\n                    onFinishedTask={this.props.onFinishedTask}\n                    listName={this.props.listName}\n                  />\n                )}\n                {task.status === 'notstarted' && (\n                  <Button variant='success' onClick={() => this.startTask('status', 'started')}>\n                    Iniciar Tarea\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}